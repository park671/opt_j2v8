# For more information about using CMake with Android Studio, read the
# documentation: https://d.android.com/studio/projects/add-native-code.html

# Sets the minimum version of CMake required to build the native library.

cmake_minimum_required(VERSION 3.18.1)

# Declares and names the project.

project("j2v8")

set(ANDROID_STL "c++_shared")

set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,--exclude-libs,ALL")#使所有静态库中的符号都不被导出

# set up the module path
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
include(BuildUtils)
include(Policies)

set(J2V8_V8_DIR "${CMAKE_SOURCE_DIR}/v8.out" CACHE STRING "Path to the V8 JS engine dependency")

# project include directories
set(include_dirs
        ${J2V8_V8_DIR}/include
        )

set(src_files
        com_eclipsesource_v8_V8Impl.cpp
        com_eclipsesource_v8_V8Impl.h
        )
source_group("" FILES ${src_files})
# tell gcc/clang to use the c++14 standard
set(CMAKE_CXX_STANDARD 17)

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wno-unused-function -Wno-unused-variable -O3 -funroll-loops -ftree-vectorize -ffast-math -fpermissive -fPIC -flto")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wno-unused-function -Wno-unused-variable -O3 -funroll-loops -ftree-vectorize -ffast-math -fpermissive -fPIC -flto")

# create the j2v8 library
add_library(v8_monolith SHARED IMPORTED)
set_target_properties(v8_monolith PROPERTIES IMPORTED_LOCATION ${J2V8_V8_DIR}/${ANDROID_ABI}/libv8android.so)

add_library(cpp SHARED IMPORTED)
set_target_properties(cpp PROPERTIES IMPORTED_LOCATION ${J2V8_V8_DIR}/${ANDROID_ABI}/libc++_shared.so)

add_library(j2v8 SHARED ${src_files})

if(${ANDROID_ABI} STREQUAL "arm64-v8a" OR ${ANDROID_ABI} STREQUAL  "x86_64")
    target_compile_options(j2v8 PRIVATE -DV8_COMPRESS_POINTERS)
endif()

# set the include directories
include_directories(${include_dirs})

# link the necessary libraries
target_link_libraries(j2v8
        v8_monolith
        cpp
        )